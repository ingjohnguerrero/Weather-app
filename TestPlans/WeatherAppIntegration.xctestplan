{
  "configurations" : [
    {
      "id" : "BAF782F6-B312-4D87-ACAB-ADD69B45F8DB",
      "name" : "Configuration 1",
      "options" : {

      }
    }
  ],
  "defaultOptions" : {

  },
  "testTargets" : [
    {
      "skippedTests" : [
        "CitiesRepositoryTests",
        "CitiesRepositoryTests\/testInitialization()",
        "CitiesRepositoryTests\/testRetrieveRecentCities()",
        "CitiesRepositoryTests\/testSaveSelectedCityStoreItInRecentCities()",
        "ForecastDetailsViewModelTests",
        "ForecastDetailsViewModelTests\/testInitialState()",
        "ForecastDetailsViewModelTests\/testLoadForecastWithError()",
        "ForecastDetailsViewModelTests\/testLoadForecastWithReturnsForecast()",
        "ForecastTests",
        "ForecastTests\/testInitInstanceIsNotNil()",
        "HomeViewModelTests",
        "HomeViewModelTests\/testInitialState()",
        "HomeViewModelTests\/testLookupCities()",
        "HomeViewModelTests\/testLookupCitiesError()",
        "JSONLoaderTests",
        "MockCitiesServiceTests",
        "MockCitiesServiceTests\/testFetchCities()",
        "MockCitiesServiceTests\/testInitialization()",
        "MockWeatherServiceTests",
        "MockWeatherServiceTests\/testFetchWeatherData()",
        "MockWeatherServiceTests\/testInitialization()",
        "OpenWeatherCityGeoCoderDTOTests",
        "OpenWeatherCityGeoCoderDTOTests\/testCitiesDecodingReturnsCorrectNumberOfCities()",
        "OpenWeatherCityGeoCoderDTOTests\/testCityDecodingReturnsCityDTO()",
        "OpenWeatherCityGeoCoderMapperTests",
        "OpenWeatherCityGeoCoderMapperTests\/testCitiesMapperReturnsCorrectNumberOfCities()",
        "OpenWeatherForecastDTOTests",
        "OpenWeatherForecastDTOTests\/testDecodeObjectFromJSONStringReturnsValidDTO()",
        "OpenWeatherForecastMapperTests",
        "OpenWeatherForecastMapperTests\/testForecastMapperReturnsValidForecast()",
        "SwiftDataCitiesServiceTests",
        "SwiftDataCitiesServiceTests\/testAllItemsDeletionResultsInEmptyRecentCities()",
        "SwiftDataCitiesServiceTests\/testInitialization()",
        "SwiftDataCitiesServiceTests\/testSaveCityIncrementsRecentCitiesCount()",
        "Weather_AppTests",
        "Weather_AppTests\/testExample()",
        "Weather_AppTests\/testPerformanceExample()"
      ],
      "target" : {
        "containerPath" : "container:Weather App.xcodeproj",
        "identifier" : "727FE7CA2DFF2BB5000A3F49",
        "name" : "Weather AppTests"
      }
    }
  ],
  "version" : 1
}
